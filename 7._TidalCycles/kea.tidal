-- Tidal crash course
-- KEA // 20210416

-- SAMPLE PLAYBACK
-- the essential pieces in order to produce a minimum sound are
-- 1. the audio channel to forward the sound to (d1 d2 etc.)
-- 2. the `sound` function
-- 3. the name of the sample folder you are picking the sample from
d1 $ sound "bd"     -- plays one sample per cycle
d1 $ s "bd"         -- equivalent
d1 "bd"             -- from v. 1.7

d1 $ s "bd" # n "1" -- choose sample no. 2 from `bd` folder (obs: count starts at zero!)
d1 $ s "bd"         -- if not specified, chosen sample is the first (n == 0)

-- stop the pattern
d1 stop

-- stop all sounds
hush


-- MINI-NOTATION 101
-- Tidal has a very powerful tool to efficiently write patterns,
-- this tool is called mini-notation.
-- Some examples are given of when and how to use it.

-- Trigger the same sample multiple times
d1 $ s "bd bd"          -- not optimal
d1 $ s "bd*2"           -- mini-notation

-- Trigger the sample every 2 cycles
d1 $ slow 2 $ s "bd"    -- classic way
d1 $ s "bd/2"           -- mini-notation

-- Mark out steps inside the patter
-- e.g. 4/4 pattern with one event per stes
-- obs: the space between the dots is important!
d1 $ s "bd . hh . sn . hh"

-- you can have multiple events per step
d1 $ s "bd*3 . bd . ~ d_hh!2 . sd:2"

-- whenever an event is added, the cycle is equally divided in time
d1 $ s "bd"             -- 1 event per cycle
d1 $ s "bd*2"           -- 2 events per cycle, each duration 1/2
d1 $ s "bd*3"           -- 3 events per cycle, each duration 1/3
-- and so on.


-- Q/A
-- evaluate multiple lines at once
-- use `do` structure and indent all lines you want to evaluate
do
    d1 $ s "bd sd:2"
    d2 $ s "cp:4*4" # gain 0.7

-- it works with multiple multi-lines too!
do
    d1
        $ every 2 rev
        $ degradeBy 0.3
        $ n (run 4) # s "peri"
    d2
        $ s "cp:4*4"
        # gain 0.7
        # delaytime "s" # delay "0.2"


-- I have an 8-note pattern and I want to play 4 notes a cycle: how do I do?
-- method 1: slowing the pattern by 8/4 = 2
d1 $ slow 2 $ note "0 1 2 3 4 5 6 7" # s "superpiano"
-- method 2: using mininotation (i.e. I want to have 4 notes per cycle)
d1 $ note "{0 1 2 3 4 5 6 7}%4" # s "superpiano"
-- method 1 is more convenient when what is inside the pattern is not written out e.g.
d1 $ slow 2 $ n (run 8) # s "superpiano"


-- How the same notation yields to different patterns
d1 $ s "bd*4 . ~ . ~" -- 3/4 bar -> 1/16th
d2 $ s "cp:4*3"

d1 $ s "bd*4 . ~ " -- 4/4 bar -> 1/8th
d2 $ s "cp:4*4"

d1 $ s "bd*4" -- 4/4 bar -> 1/4th
d2 $ s "cp:4*4"

-- it is difficult to think in terms of classic musical durations
-- as time in Tidal is *not* linear.
-- It makes more sense to think in terms of ratios
-- e.g. 1/2 of a cycle, 1/3 of a cycle etc.
